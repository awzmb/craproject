Grundlegende Fragestellung / Daten:
	-> Für jeden Testuser, für jeden Testdatensatz (5 insgesamt), für jede Variation
	von k (7 Werte verwenden) eine über die User aggregierte ROC-Kurve bilden (insgesamt
	7 ROC Kurven)
		=> Für welches k bekommen wir das beste Ergebnis
		
Anweisungen:
	-> Für jeden Testdatensatz soll ein separates Ranking erstellt werden (t1User, t2User, etc.)
	-> t1User enthält UserIDs -> für diese UserIDs sollen die gesamten Daten aus data gezogen werden
	-> Statt wie im Skript angegeben sollen nicht zufällig 5 Werte ausgewählt, sondern nur die 5-Sterne-Bewertungen aus t1User, t2User, etc. verwendet werden
	
	-> t1Active erstellen:
	    -> Vektor mit NA erstellen der so lang ist wie t1Spearman für alle User aus t1Training
	    -> t1User mit data über UserID verbinden um Bewertungen in den Vektor zu kriegen (1-5)
	    -> Restliche fehlende Elemente aus t1User als NA-Items verwenden
	    -> Auffüllen mit NA bis die Länge t1Spearman erreicht ist
	
	-> u.data soll über t1User reduziert werden, um die Activeuser Matrix zu erhalten
	
	
Letzte Fragestellung:
	-> Welche Filme werden für welchen k-Wert empfohlen?


-> Auswertungen
  -> ROC fuer alle angegebenen k-Werte
    -> verschiedene linientypen!
  -> Testuser
    -> Fuer ausgewaehlte k ("interessante k" selektieren!)
  -> Proportionalität (Diagramm oder Tabelle)
    -> keine Prop vorhanden
    -> NRR monoton fallend
  -> maximaler AUC Wert (bester k Wert)
  -> Streuung (fuer maximalen k-Wert)
  -> AUC Abhängigkeit von NRR
  -> ROC fuer Prozentwerte -> in bestimmten Schritten (z. B: Cluster 1-5, Cluster 20-50)
  in Graustufen darstellen
  
  -> AUC Werte nicht ohne NRR (mit in Legende aufnehmen)
  -> Tabelle AUC / NRR fuer k
  
  -> Formulierung : "in vorliegendem Falle..."", vorsichtig interpretieren!, KONJUNKTIV!
  
  -> So beschreiben, dass es theoretisch ein sachverstaendiger Dritter "rekonstruieren" kann
  
  -> Weniger Formeln runterbrechen, Augenmerk auf kNN